def isDebug = debug.toBoolean()

if (isDebug) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    resourcePrefix 'u_'

    sourceSets {
        main {
            if (isDebug) {
                manifest.srcFile "src/main/debug/AndroidManifest.xml"
                java {
                    exclude 'release/**'
                }
            } else {
                manifest.srcFile "src/main/AndroidManifest.xml"
                java {
                    exclude 'debug/**'
                }
            }
        }
    }

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/rxjava.properties'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile rootProject.ext.libSupportAppcompat

    compile project(':frameworkCore')
    compile project(':frameworkResource')
}
